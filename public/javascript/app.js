// Generated by CozyScript 0.1.1
(function() {
  var UbikeMap, app,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  app = angular.module('ubike-web', ['ngRoute', 'ngResource', 'ngAnimate']);

  app.controller('UbikeCtrl', function($scope, $resource) {
    $scope.stations = [];
    $scope.markers = {};
    $scope.valley_time = {};
    $scope.current_station_name = "";
    $scope.predicate = "bike";
    $scope.station_name = "";
    window.update = function(new_markers, new_diffs, new_valley_time) {
      var marker, station, station_name, _i, _len;
      $scope.stations = [];
      for (station_name in new_diffs) {
        station = new_diffs[station_name];
        station['name'] = station_name;
        $scope.stations.push(station);
      }
      for (_i = 0, _len = new_markers.length; _i < _len; _i++) {
        marker = new_markers[_i];
        $scope.markers[marker.name] = marker;
      }
      $scope.valley_time = new_valley_time;
      return $scope.$apply();
    };
    $scope.change = function() {
      return console.log('scope change');
    };
    $scope.filter_max = function(station) {
      if ($scope.predicate === "bike") {
        return station.bike !== Number.MAX_VALUE;
      } else {
        return station.slot !== Number.MAX_VALUE;
      }
    };
    return $scope.click_station = function(station) {
      var lat, lng, marker;
      marker = $scope.markers[station];
      lat = marker['lat'];
      lng = marker['lng'];
      $scope.current_station_name = station;
      return window.setTimeout(function() {
        window.map.set_center(lat, lng);
        return window.map.show_info(station);
      }, 500);
    };
  });

  UbikeMap = (function() {

    function UbikeMap(map_element_id) {
      this.put_marker = __bind(this.put_marker, this);
      this.show_info = __bind(this.show_info, this);
      this.set_center = __bind(this.set_center, this);
      this.get_markers = __bind(this.get_markers, this);
      this.redraw = __bind(this.redraw, this);
      this.setzoom = __bind(this.setzoom, this);
      var latlng, mapOptions;
      latlng = new google.maps.LatLng(-25.363882, 131.044922);
      mapOptions = {
        zoom: 17,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      this.map = new google.maps.Map(document.getElementById(map_element_id), mapOptions);
      this.markers = {};
      this.infowindow = new google.maps.InfoWindow();
    }

    UbikeMap.prototype.setzoom = function(level) {
      return this.map.setZoom(level);
    };

    UbikeMap.prototype.redraw = function() {
      console.log('redraw');
      return google.maps.event.trigger(this.map, 'resize');
    };

    UbikeMap.prototype.get_markers = function() {
      return this.markers;
    };

    UbikeMap.prototype.set_center = function(lat, lng) {
      var newlatlng;
      newlatlng = new google.maps.LatLng(lat, lng);
      return this.map.setCenter(newlatlng);
    };

    UbikeMap.prototype.show_info = function(name) {
      var marker;
      if (this.markers[name] != null) {
        marker = this.markers[name];
        $('#mapinfobox > span').text(name);
        this.infowindow.setContent($('.infobox').html());
        return this.infowindow.open(this.map, marker);
      }
    };

    UbikeMap.prototype.put_marker = function(lat, lng, name) {
      var marker, newlatlng,
        _this = this;
      newlatlng = new google.maps.LatLng(lat, lng);
      marker = new google.maps.Marker({
        position: newlatlng,
        map: this.map,
        icon: {
          url: 'images/bike.png',
          scaledSize: new google.maps.Size(50, 50)
        }
      });
      this.markers[name] = marker;
      return google.maps.event.addListener(marker, 'click', function() {
        $('#mapinfobox > span').text(name);
        _this.infowindow.setContent($('.infobox').html());
        return _this.infowindow.open(_this.map, marker);
      });
    };

    return UbikeMap;

  })();

  $(document).ready(function() {
    var socket;
    window.current_marker = null;
    socket = io.connect('http://cml10.csie.ntu.edu.tw:8088');
    socket.on('ubike', function(data) {
      var diffs, markers, valley_time;
      markers = data[0];
      diffs = data[1];
      valley_time = data[2];
      window.update(markers, diffs, valley_time);
      if (Object.keys(window.map.get_markers()).length !== markers.length) {
        return markers.forEach(function(marker) {
          return window.map.put_marker(marker.lat, marker.lng, marker.name);
        });
      }
    });
    window.map = new UbikeMap('map-canvas');
    return $(".fancybox").fancybox();
  });

}).call(this);
